#!/usr/bin/env ruby

require 'telegram/bot'

require_relative '../lib/app_configurator'
require_relative '../lib/reply_keyboards'
require_relative '../lib/messages'
require_relative '../lib/random'

config = AppConfigurator.new
msg = Messages.new
keyboard = ReplyKeyboards.new
random = Random.new

token = config.token

Telegram::Bot::Client.run(token) do |bot|
  bot.listen do |message|
    case message.text
    when '/start'
      bot.api.send_message(chat_id: message.chat.id, text: msg.messages['welcome_message'])
      bot.api.send_message(chat_id: message.chat.id, text: msg.messages['commands'])
    when '/help'
      bot.api.send_message(chat_id: message.chat.id, text: msg.messages['commands'])
    when '/book'
      bot.api.send_message(chat_id: message.chat.id, text: msg.messages['ask_book'],
                           reply_markup: keyboard.keyboard(keyboard.book_genres))
    when 'Novel'
      bot.api.send_message(chat_id: message.chat.id, text: msg.messages['ask_book'],
                           reply_markup: keyboard.keyboard(keyboard.novel_genres))
    when 'Sci-Fi'
      bot.api.send_message(chat_id: message.chat.id, text: random.recommendation(random.sci_fi, random.sentences))
    when 'Terror'
      bot.api.send_message(chat_id: message.chat.id, text: random.recommendation(random.terror, random.sentences))
    when 'Romantic'
      bot.api.send_message(chat_id: message.chat.id, text: random.recommendation(random.romantic, random.sentences))
    # when 'Fantasy'
    # when 'Historic'
    # when 'Mystery'
    when '/quote'
      bot.api.send_message(chat_id: message.chat.id, text: msg.messages['ask_mood'],
                           reply_markup: keyboard.keyboard(keyboard.moods))
    when '/stop'
      bot.api.send_message(chat_id: message.chat.id, text: msg.messages['farewell'])
    else
      bot.api.send_message(chat_id: message.chat.id, text: msg.messages['wrong_input'])
    end
  end
end
